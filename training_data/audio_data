import librosa as librosa
import numpy as np
import matplotlib.pyplot as plt
from matplotlib.backends.backend_agg import FigureCanvasAgg as FigureCanvas
%matplotlib inline
import librosa.display
import pandas as pd
import os
from sklearn.model_selection import train_test_split
import math


#Set parameters
n_fft = 1024
hop_length = 512 
block_length = 2560
frame_length = 2048
sr = 22050
TRACK_DURATION = 60 # measured in seconds
SAMPLES_PER_TRACK = sr * TRACK_DURATION

audio_folder = "Soundcloud Songs"
Save_path = "drake_lyric_data"

def save_mfcc(dataset_path, Save_path, n_mfcc=13, sr=sr, n_fft=n_fft, hop_length=hop_length, num_segments=5):
    data = {
        "mfcc": []
    }

    samples_per_segment = int(SAMPLES_PER_TRACK / num_segments)
    num_mfcc_vectors_per_segment = math.ceil(samples_per_segment / hop_length)
    
    for i, (dirpath, dirnames, filenames) in enumerate(os.walk(dataset_path)):
        for f in filesnames:
            if f.endswith(".mp3"):
                file_path = os.path.join(dirpath, f)
                stream = librosa.stream(file_path, block_length=block_length,
                      frame_length=frame_length,
                      hop_length=hop_length)
                for d in range(num_segments):
                    start = samples_per_segment * d
                    finish = start + samples_per_segment

                    mffc = librosa.feature.mfcc(stream[start:finish], sr, n_mfcc=n_mfcc, n_fft=n_fft, hop_length=hop_length)
                    mffc = mfcc.T

                    if len(mfcc) == num_mfcc_vectors_per_segment:
                        data["mfcc"].append(mfcc.tolist())
                        print("{}, segment:{}".format(file_path, d+1))

                    

    df = pd.DataFrame.from_dict(data)

    df.to_csv("drake_lyric_data")




save_mfcc(Soundcloud Songs/Drake - 7969 Santa.mp3, )
